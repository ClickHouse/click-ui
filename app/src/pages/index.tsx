import merge from "lodash/merge";
import Head from "next/head";
import styles from "@/styles/Home.module.css";

import { Card } from "../components/Card/card";
import { TextFieldLabel } from "../components/FormField/index";
import { ButtonGroup } from "../components/ButtonGroup";
import IconButton from "@/components/IconButton";
import ProfileIcon from "@/components/icons/ProfileIcon";
import { Badge } from "@/components/Badge/badge";
import Switch from "../components/Switch";
import { DefaultTheme, ThemeProvider } from "styled-components";
import { useState } from "react";

import classicTheme from "../styles/variables.classic.json";
import darkTheme from "../styles/variables.dark.json";
import lightTheme from "../styles/variables.light.json";
import theme from "../styles/variables.json";

import { Theme } from "../styles/types";

declare module "styled-components" {
  export interface DefaultTheme extends Theme {}
}
import { BigStat } from "@/components/BigStat/bigStat";
import Button from "@/components/Button/Button";

export default function Home() {
  const [checked, setChecked] = useState(false);
  const [disabled, setDisabled] = useState(false);
  const [currentTheme, setCurrentTheme] = useState("dark");
  const [selectedButton, setSelectedButton] = useState(0);

  const themes: Record<string, DefaultTheme> = {
    dark: merge({}, theme, darkTheme),
    light: merge({}, theme, lightTheme),
    classic: merge({}, theme, classicTheme),
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}`}>
        <TextFieldLabel state="default" text="my label" />
        <TextFieldLabel state="active" text="my label" />
        <TextFieldLabel state="disabled" text="my label" />
        <TextFieldLabel state="error" text="my label" />

        <div className={styles.flexWrap}>
          <IconButton size="small">
            <ProfileIcon />
          </IconButton>
          <IconButton size="small" state="active">
            <ProfileIcon />
          </IconButton>
          <IconButton size="small" disabled>
            <ProfileIcon />
          </IconButton>
        </div>
        <div className={styles.flexWrap}>
          <IconButton>
            <ProfileIcon />
          </IconButton>
          <IconButton state="active">
            <ProfileIcon />
          </IconButton>
          <IconButton disabled>
            <ProfileIcon />
          </IconButton>
        </div>
        <div className={styles.flexWrap}>
          <IconButton display="empty">
            <ProfileIcon />
          </IconButton>
          <IconButton display="empty" state="active">
            <ProfileIcon />
          </IconButton>
          <IconButton display="empty" disabled>
            <ProfileIcon />
          </IconButton>
        </div>
        <div className={styles.flexWrap}>
          <Badge text={"default"}></Badge>
          <Badge text={"success"} state={"success"}></Badge>
          <Badge text={"neutral"} state={"neutral"}></Badge>
          <Badge text={"danger"} state={"danger"}></Badge>
          <Badge text={"disabled"} state={"disabled"}></Badge>
        </div>
        <Card
          title="Card title"
          description="This is a card description"
          badgeText="experiment"
          infoText="Read More"
          infoUrl="#"
        ></Card>

        <ButtonGroup
          labels={["Left center", "Center", "Center", "Center", "Right end"]}
          activeIndex={selectedButton}
          onClick={(index: number) => setSelectedButton(index)}
        />
        <ThemeProvider theme={themes[currentTheme]}>
          <Switch
            checked={checked}
            disabled={disabled}
            onCheckedChange={setChecked}
          />
          <button onClick={() => setDisabled(!disabled)}>Disable</button>
          <div style={{ color: "white" }}>disabled: {`${disabled}`}</div>
          <button
            onClick={() => {
              document.body.style.backgroundColor = "black";
              setCurrentTheme("dark");
            }}
          >
            Dark
          </button>
          <button
            onClick={() => {
              document.body.style.backgroundColor = "white";
              setCurrentTheme("light");
            }}
          >
            Light
          </button>
          <button
            onClick={() => {
              document.body.style.backgroundColor = "white";
              setCurrentTheme("classic");
            }}
          >
            Classic
          </button>
          <Button onClick={() => alert("button1")}>Click ui button</Button>
          <Button onClick={() => alert("button2")} type="secondary">
            Secondary Click ui button
          </Button>
        </ThemeProvider>
        <BigStat
          label={"Last successful backup"}
          largeValue={"12 hours ago"}
        ></BigStat>
      </main>
    </>
  );
}
